/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Main;

import Business.Apartment.Apartment;
import Business.Apartment.ApartmentDirectory;
import Application.Utils.AppSystem;
import java.sql.*;
import Application.Utils.Helper;
import Business.Property.Property;
import Business.Property.PropertyDirectory;
import javax.swing.*;

/**
 *
 * @author hmitt
 */
public class ListingViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ListingViewJPanel
     */
    WorkAreaContPanel workAreaPanel;
    ApartmentDirectory aptList;
    PropertyDirectory propList;
    
    public static void main(String[] args) {
        
        
    }
    
    public ListingViewJPanel() {
        this.workAreaPanel = AppSystem.workAreaPanel;
        aptList = new ApartmentDirectory();
        propList = new PropertyDirectory();
        initComponents();        
        getApartmentListFromDB();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JLabel WelcomjLabel = new javax.swing.JLabel();
        AptListjLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AptListjTable = new javax.swing.JTable();
        BookAptjButton = new javax.swing.JButton();
        ViewDetailsjButton = new javax.swing.JButton();

        WelcomjLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        WelcomjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        WelcomjLabel.setText("Welcome to Apartment listing wizard!");

        AptListjLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        AptListjLabel.setText("Apartment list:-");

        AptListjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Apartment no.", "Building", "Type", "Management company", "Size", "Availability date", "Street", "Community", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(AptListjTable);

        BookAptjButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        BookAptjButton.setText("Book");
        BookAptjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookAptjButtonActionPerformed(evt);
            }
        });

        ViewDetailsjButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ViewDetailsjButton.setText("View details");
        ViewDetailsjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewDetailsjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(WelcomjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                        .addComponent(AptListjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ViewDetailsjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BookAptjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(143, 143, 143))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(WelcomjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AptListjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(ViewDetailsjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BookAptjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(449, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void BookAptjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookAptjButtonActionPerformed
        // TODO add your handling code here:
        
        int selectedRow[] = AptListjTable.getSelectedRows();
        
        if (selectedRow.length == 0) {
            JOptionPane.showMessageDialog(BookAptjButton, "Please select a row!");
            return;
        }

        else if (selectedRow.length>1) {
            JOptionPane.showMessageDialog(BookAptjButton, "Please select only 1 row!");
            return;
        }

        else {
            JOptionPane.showMessageDialog(BookAptjButton, "Apartment booking request placed!");
            //Send booking request to management company.
            return;
        }
        
    }//GEN-LAST:event_BookAptjButtonActionPerformed

    private void ViewDetailsjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewDetailsjButtonActionPerformed
        // TODO add your handling code here:
        
        int selectedRow[] = AptListjTable.getSelectedRows();
        
        if (selectedRow.length == 0) {
            JOptionPane.showMessageDialog(ViewDetailsjButton, "Please select a row to view!");
            return;
        }

        else if (selectedRow.length>1) {
            JOptionPane.showMessageDialog(ViewDetailsjButton, "Please select only 1 row to view!");
            return;
        }

        else {
            
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) AptListjTable.getModel();
            
            for (int i=0;i<selectedRow.length;i++){
                Apartment apt = (Apartment) model.getValueAt(selectedRow[i], 0);
                workAreaPanel.setRightPanel(new AptDetailsJPanel(workAreaPanel, apt));
            }

        }
        
    }//GEN-LAST:event_ViewDetailsjButtonActionPerformed

    public void getApartmentListFromDB(){
        try{
            Connection conn = Helper.getConnection();
            Statement st = conn.createStatement();
            Statement st2 = conn.createStatement();
            ResultSet aptRs = st.executeQuery("SELECT * FROM aedfinalproject.apartment_details");
            ResultSet propRs = st2.executeQuery("SELECT * FROM aedfinalproject.property_details");
            
            while (propRs.next()){
                Property prop = propList.addNewProfile();
                prop.setPropId(propRs.getInt(1));
                prop.setOwnerId(propRs.getInt(2));
                prop.setMgtComp(propRs.getInt(3));
                prop.setMgtBroker(propRs.getInt(4));
                prop.setStreet(propRs.getString(5));
                prop.setCommunity(propRs.getString(6));
                prop.setCity(propRs.getString(7));
                prop.setState(propRs.getString(8));
                prop.setPropName(propRs.getString(9));
            }

            while (aptRs.next()){
                Apartment apt = aptList.addNewProfile();
                apt.setAptId(aptRs.getInt(1));
                apt.setTenantId(aptRs.getInt(2));
                apt.setSize(aptRs.getInt(3));
                apt.setBedroom(aptRs.getInt(4));
                apt.setBathroom(aptRs.getInt(5));
                apt.setType(aptRs.getString(6));
                apt.setAvlblDate(aptRs.getDate(7));
                apt.setRent(aptRs.getInt(8));
                apt.setDetails(aptRs.getString(9));
                apt.setLattitude(aptRs.getString(10));
                apt.setLongitude(aptRs.getString(11));
                apt.setIsLeased(aptRs.getBoolean(12));
                apt.setAptPropId(aptRs.getInt(13));
                
                for (Property p : propList.getPropList()){
                    if (p.getPropId()==apt.getAptPropId())
                        apt.setProp(p);
                }
                
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
            
    }
    
    public void populateTable(){
        
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) AptListjTable.getModel();
        model.setRowCount(0);
        
        for (Apartment a : aptList.getAptList()) {
            
            Object[] row = new Object[9];
            row[0] = a;
            row[1] = a.prop.getPropName();
            row[2] = a.getType();
            row[3] = a.prop.getMgtComp();
            row[4] = a.getSize();
            row[5] = a.getAvlblDate();
            row[6] = a.prop.getStreet();
            row[7] = a.prop.getCommunity();
            row[8] = a.prop.getCity();
            
            model.addRow(row);
        }
            
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AptListjLabel;
    private javax.swing.JTable AptListjTable;
    private javax.swing.JButton BookAptjButton;
    private javax.swing.JButton ViewDetailsjButton;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
