/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.SystemAdmin;

import Application.Utils.DatabaseUtils;
import Business.FinanceCompany.FinanceCompany;
import Business.FinanceCompany.FinanceCompanyDirectory;
import Business.LegalCompany.LegalCompany;
import Business.LegalCompany.LegalCompanyDirectory;
import Business.ManagementCompany.ManagementCompany;
import Business.ManagementCompany.ManagementCompanyDirectory;
import Business.UtilityCompany.ElectricityCompany;
import Business.UtilityCompany.ElectricityCompanyDirectory;
import Business.UtilityCompany.GasCompany;
import Business.UtilityCompany.GasCompanyDirectory;
import Business.UtilityCompany.WaterCompany;
import Business.UtilityCompany.WaterCompanyDirectory;
import java.sql.Connection;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author hmitt
 */
public class NewCompaniesAddJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NewCompaniesAddJPanel
     */
    ManagementCompanyDirectory mgtList, readMgtList;
    ElectricityCompanyDirectory elecList, readElecList;
    GasCompanyDirectory gasList, readGasList;
    WaterCompanyDirectory waterList, readWaterList;
    LegalCompanyDirectory legalList, readLegalList;
    FinanceCompanyDirectory financeList, readFinanceList;
    
    public NewCompaniesAddJPanel() {
        initComponents();
        mgtList= new ManagementCompanyDirectory();
        elecList= new ElectricityCompanyDirectory();
        gasList= new GasCompanyDirectory();
        waterList= new WaterCompanyDirectory();
        legalList= new LegalCompanyDirectory();
        financeList= new FinanceCompanyDirectory();
        clearSelection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        WelcomejLabel = new javax.swing.JLabel();
        SubHeadingjLabel = new javax.swing.JLabel();
        CompanyTypejLabel = new javax.swing.JLabel();
        CompanyIdjLabel = new javax.swing.JLabel();
        CompanyNamejLabel = new javax.swing.JLabel();
        CompanyTypejComboBox = new javax.swing.JComboBox<>();
        CompanyIdjTextField = new javax.swing.JTextField();
        CompanyNamejTextField = new javax.swing.JTextField();
        SubmitjButton = new javax.swing.JButton();
        CanceljButton = new javax.swing.JButton();
        CompanyCityjLabel = new javax.swing.JLabel();
        CompanycityjTextField = new javax.swing.JTextField();
        CompanyStatejLabel = new javax.swing.JLabel();
        CompanyStatejTextField = new javax.swing.JTextField();
        TableHeadingjLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CompanyListjTable = new javax.swing.JTable();
        ManagementjButton = new javax.swing.JButton();
        ElectricityjButton = new javax.swing.JButton();
        GasjButton = new javax.swing.JButton();
        WaterjButton = new javax.swing.JButton();
        LegaljButton = new javax.swing.JButton();
        FinancejButton = new javax.swing.JButton();

        WelcomejLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        WelcomejLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        WelcomejLabel.setText("Welcome to company management wizard!");

        SubHeadingjLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SubHeadingjLabel.setText("Kindly proceed to add new companies in the system:");

        CompanyTypejLabel.setText("Comapny type");

        CompanyIdjLabel.setText("Comapny ID");

        CompanyNamejLabel.setText("Comapny name");

        CompanyTypejComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Management Company", "Electricity Company", "Gas Company", "Water Company", "Legal Company", "Finance Company" }));

        SubmitjButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SubmitjButton.setText("Submit");
        SubmitjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitjButtonActionPerformed(evt);
            }
        });

        CanceljButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CanceljButton.setText("Cancel");
        CanceljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CanceljButtonActionPerformed(evt);
            }
        });

        CompanyCityjLabel.setText("City");

        CompanyStatejLabel.setText("State");

        TableHeadingjLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TableHeadingjLabel.setText("Companies present in the system:");

        CompanyListjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Type", "Company ID", "Company Name", "City", "State"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(CompanyListjTable);

        ManagementjButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ManagementjButton.setText("Management");
        ManagementjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManagementjButtonActionPerformed(evt);
            }
        });

        ElectricityjButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ElectricityjButton.setText("Electricity");
        ElectricityjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ElectricityjButtonActionPerformed(evt);
            }
        });

        GasjButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        GasjButton.setText("Gas");
        GasjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GasjButtonActionPerformed(evt);
            }
        });

        WaterjButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        WaterjButton.setText("Water");
        WaterjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WaterjButtonActionPerformed(evt);
            }
        });

        LegaljButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        LegaljButton.setText("Legal");
        LegaljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LegaljButtonActionPerformed(evt);
            }
        });

        FinancejButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        FinancejButton.setText("Finance");
        FinancejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinancejButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ElectricityjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ManagementjButton, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(FinancejButton, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                            .addComponent(GasjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(WaterjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(SubmitjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(CanceljButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SubHeadingjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CompanyTypejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CompanyIdjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CompanyNamejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CompanyCityjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CompanyStatejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CompanyTypejComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CompanyIdjTextField)
                            .addComponent(CompanyNamejTextField)
                            .addComponent(CompanycityjTextField)
                            .addComponent(CompanyStatejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(TableHeadingjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(LegaljButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(WelcomejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(WelcomejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SubHeadingjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CompanyTypejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CompanyTypejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CompanyIdjTextField)
                    .addComponent(CompanyIdjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CompanyNamejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CompanyNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CompanyCityjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CompanycityjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CompanyStatejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CompanyStatejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SubmitjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CanceljButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(TableHeadingjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FinancejButton)
                    .addComponent(ManagementjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LegaljButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ElectricityjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GasjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WaterjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitjButtonActionPerformed
        // TODO add your handling code here:
        
        String companyType= new String();
        companyType= (String) CompanyTypejComboBox.getSelectedItem();
        
        switch (companyType){
            case "Management Company":
                ManagementCompany mgtComp= mgtList.addNewProfile();
                mgtComp.setMgmtId(Integer.parseInt(CompanyIdjTextField.getText()));
                mgtComp.setMgmtName(CompanyNamejTextField.getText());
                mgtComp.setCity(CompanycityjTextField.getText());
                mgtComp.setState(CompanyStatejTextField.getText());
                
                try{

                    Connection conn= DatabaseUtils.getConnection();
                    Statement st = conn.createStatement();
                    st.executeUpdate("INSERT INTO `aedfinalproject`.`management_companies` (`mgt_comp_id`, `mgt_comp_name`) VALUES ('" + mgtComp.getMgmtId() + "','" + mgtComp.getMgmtName() + "','" + mgtComp.getCity() + "','" + mgtComp.getState() + "')");

                }
                catch(Exception e){
                    System.out.println(e);
                }

                JOptionPane.showMessageDialog(SubmitjButton, "Company added successfully");
                
                clearSelection();
                
                break;
                
            case "Electricity Company":
                ElectricityCompany elecComp= elecList.addNewProfile();
                elecComp.setElectricityId(Integer.parseInt(CompanyIdjTextField.getText()));
                elecComp.setElectricityName(CompanyNamejTextField.getText());
                elecComp.setElectricityCity(CompanycityjTextField.getText());
                elecComp.setElectricityState(CompanyStatejTextField.getText());
                
                try{

                    Connection conn= DatabaseUtils.getConnection();
                    Statement st = conn.createStatement();
                    st.executeUpdate("INSERT INTO `aedfinalproject`.`electricity_companies` (`elec_comp_id`, `elec_comp_name`, `elec_city`, `elec_state`) VALUES ('" + elecComp.getElectricityId() + "','" + elecComp.getElectricityName() + "','" + elecComp.getElectricityCity() + "','" + elecComp.getElectricityState() + "')");

                }
                catch(Exception e){
                    System.out.println(e);
                }

                JOptionPane.showMessageDialog(SubmitjButton, "Company added successfully");
                
                clearSelection();
                
                break;
                
            case "Gas Company":
                GasCompany gasComp= gasList.addNewProfile();
                gasComp.setGasId(Integer.parseInt(CompanyIdjTextField.getText()));
                gasComp.setGasName(CompanyNamejTextField.getText());
                gasComp.setGasCity(CompanycityjTextField.getText());
                gasComp.setGasState(CompanyStatejTextField.getText());
                
                try{

                    Connection conn= DatabaseUtils.getConnection();
                    Statement st = conn.createStatement();
                    st.executeUpdate("INSERT INTO `aedfinalproject`.`gas_companies` (`gas_comp_id`, `gas_comp_name`, `gas_city`, `gas_state`) VALUES ('" + gasComp.getGasId() + "','" + gasComp.getGasName() + "','" + gasComp.getGasCity() + "','" + gasComp.getGasState() + "')");

                }
                catch(Exception e){
                    System.out.println(e);
                }

                JOptionPane.showMessageDialog(SubmitjButton, "Company added successfully");
                
                clearSelection();
                
                break;
                
            case "Water Company":
                WaterCompany waterComp= waterList.addNewProfile();
                waterComp.setWaterId(Integer.parseInt(CompanyIdjTextField.getText()));
                waterComp.setWaterName(CompanyNamejTextField.getText());
                waterComp.setWaterCity(CompanycityjTextField.getText());
                waterComp.setWaterState(CompanyStatejTextField.getText());
                
                try{

                    Connection conn= DatabaseUtils.getConnection();
                    Statement st = conn.createStatement();
                    st.executeUpdate("INSERT INTO `aedfinalproject`.`water_companies` (`water_comp_id`, `water_comp_name`, `water_city`, `water_state`) VALUES ('" + waterComp.getWaterId() + "','" + waterComp.getWaterName() + "','" + waterComp.getWaterCity() + "','" + waterComp.getWaterState() + "')");

                }
                catch(Exception e){
                    System.out.println(e);
                }

                JOptionPane.showMessageDialog(SubmitjButton, "Company added successfully");
                
                clearSelection();
                
                break;
                
            case "Legal Company":
                LegalCompany legalComp= legalList.addNewProfile();
                legalComp.setLegalId(Integer.parseInt(CompanyIdjTextField.getText()));
                legalComp.setLegalName(CompanyNamejTextField.getText());
                legalComp.setLegalCity(CompanycityjTextField.getText());
                legalComp.setLegalState(CompanyStatejTextField.getText());
                
                try{

                    Connection conn= DatabaseUtils.getConnection();
                    Statement st = conn.createStatement();
                    st.executeUpdate("INSERT INTO `aedfinalproject`.`legal_companies` (`legal_comp_id`, `legal_comp_name`, `legal_city`, `legal_state` ) VALUES ('" + legalComp.getLegalId() + "','" + legalComp.getLegalName() + "','" + legalComp.getLegalCity() + "','" + legalComp.getLegalState() + "')");
                    
                }
                catch(Exception e){
                    System.out.println(e);
                }

                JOptionPane.showMessageDialog(SubmitjButton, "Company added successfully");
                
                clearSelection();
                
                break;
                
            case "Finance Company":
                FinanceCompany financeComp= financeList.addNewProfile();
                financeComp.setFinanceId(Integer.parseInt(CompanyIdjTextField.getText()));
                financeComp.setFinanceName(CompanyNamejTextField.getText());
                financeComp.setFinanceCity(CompanycityjTextField.getText());
                financeComp.setFinanceState(CompanyStatejTextField.getText());
                
                try{

                    Connection conn= DatabaseUtils.getConnection();
                    Statement st = conn.createStatement();
                    st.executeUpdate("INSERT INTO `aedfinalproject`.`fin_companies` (`fin_id`, `fin_name`, `fin_city`, `fin_state` ) VALUES ('" + financeComp.getFinanceId() + "','" + financeComp.getFinanceName() + "','" + financeComp.getFinanceCity() + "','" + financeComp.getFinanceState() + "')");
                    
                }
                catch(Exception e){
                    System.out.println(e);
                }

                JOptionPane.showMessageDialog(SubmitjButton, "Company added successfully");
                
                clearSelection();
                
                break;
                
            default: break;
                
        }
         
    }//GEN-LAST:event_SubmitjButtonActionPerformed

    private void CanceljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CanceljButtonActionPerformed
        // TODO add your handling code here:
        
        clearSelection();
        
    }//GEN-LAST:event_CanceljButtonActionPerformed

    private void ManagementjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManagementjButtonActionPerformed
        // TODO add your handling code here:    
        populateMgmtListTable();
    }//GEN-LAST:event_ManagementjButtonActionPerformed

    private void ElectricityjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ElectricityjButtonActionPerformed
        // TODO add your handling code here:
        populateElecListTable();
    }//GEN-LAST:event_ElectricityjButtonActionPerformed

    private void GasjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GasjButtonActionPerformed
        // TODO add your handling code here:
        populateGasListTable();
    }//GEN-LAST:event_GasjButtonActionPerformed

    private void WaterjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WaterjButtonActionPerformed
        // TODO add your handling code here:
        populateWaterListTable();
    }//GEN-LAST:event_WaterjButtonActionPerformed

    private void LegaljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LegaljButtonActionPerformed
        // TODO add your handling code here:
        populateLegalListTable();
    }//GEN-LAST:event_LegaljButtonActionPerformed

    private void FinancejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinancejButtonActionPerformed
        // TODO add your handling code here:
        populateFinanceListTable();
    }//GEN-LAST:event_FinancejButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CanceljButton;
    private javax.swing.JLabel CompanyCityjLabel;
    private javax.swing.JLabel CompanyIdjLabel;
    private javax.swing.JTextField CompanyIdjTextField;
    private javax.swing.JTable CompanyListjTable;
    private javax.swing.JLabel CompanyNamejLabel;
    private javax.swing.JTextField CompanyNamejTextField;
    private javax.swing.JLabel CompanyStatejLabel;
    private javax.swing.JTextField CompanyStatejTextField;
    private javax.swing.JComboBox<String> CompanyTypejComboBox;
    private javax.swing.JLabel CompanyTypejLabel;
    private javax.swing.JTextField CompanycityjTextField;
    private javax.swing.JButton ElectricityjButton;
    private javax.swing.JButton FinancejButton;
    private javax.swing.JButton GasjButton;
    private javax.swing.JButton LegaljButton;
    private javax.swing.JButton ManagementjButton;
    private javax.swing.JLabel SubHeadingjLabel;
    private javax.swing.JButton SubmitjButton;
    private javax.swing.JLabel TableHeadingjLabel;
    private javax.swing.JButton WaterjButton;
    private javax.swing.JLabel WelcomejLabel;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
    public void clearSelection(){
        CompanyIdjTextField.setText("");
        CompanyNamejTextField.setText("");
        CompanycityjTextField.setText("");
        CompanyStatejTextField.setText("");
    }
    
    public void populateMgmtListTable(){
        
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) CompanyListjTable.getModel();
        model.setRowCount(0);
        
        readMgtList= DatabaseUtils.getMgmtListFromDB();
        
        for (ManagementCompany m : readMgtList.getMgmtList()){
            
            Object[] row = new Object[7];
            row[0] = "Management company";
            row[1] = m.getMgmtId();
            row[2] = m.getMgmtName();
            row[3] = m.getCity();
            row[4] = m.getState();
            
            model.addRow(row);
            
        }
        
    }
    
    public void populateElecListTable(){
        
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) CompanyListjTable.getModel();
        model.setRowCount(0);
        
        readElecList = DatabaseUtils.getElecListFromDB();
        
        for (ElectricityCompany e : readElecList.getElecList()){
            
            Object[] row = new Object[7];
            row[0] = "Electricity company";
            row[1] = e.getElectricityId();
            row[2] = e.getElectricityName();
            row[3] = e.getElectricityCity();
            row[4] = e.getElectricityState();
            
            model.addRow(row);
            
        }
        
    }
    
    public void populateGasListTable(){
        
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) CompanyListjTable.getModel();
        model.setRowCount(0);
        
        readGasList = DatabaseUtils.getGasListFromDB();
        
        for (GasCompany g : readGasList.getGasList()){
            
            Object[] row = new Object[7];
            row[0] = "Gas company";
            row[1] = g.getGasId();
            row[2] = g.getGasName();
            row[3] = g.getGasCity();
            row[4] = g.getGasState();
            
            model.addRow(row);
            
        }
        
    }
    
    public void populateLegalListTable(){
        
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) CompanyListjTable.getModel();
        model.setRowCount(0);
        
        readLegalList = DatabaseUtils.getLegalListFromDB();
        
        for (LegalCompany l : readLegalList.getLegalList()){
            
            Object[] row = new Object[7];
            row[0] = "Legal company";
            row[1] = l.getLegalId();
            row[2] = l.getLegalName();
            row[3] = l.getLegalCity();
            row[4] = l.getLegalState();
            
            model.addRow(row);
            
        }
        
    }
    
    public void populateWaterListTable(){
        
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) CompanyListjTable.getModel();
        model.setRowCount(0);
        
        readWaterList = DatabaseUtils.getWaterListFromDB();
        
        for (WaterCompany w : readWaterList.getWaterList()){
            
            Object[] row = new Object[7];
            row[0] = "Water company";
            row[1] = w.getWaterId();
            row[2] = w.getWaterName();
            row[3] = w.getWaterCity();
            row[4] = w.getWaterState();
            
            model.addRow(row);
            
        }
        
    }
    
    public void populateFinanceListTable(){
        
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) CompanyListjTable.getModel();
        model.setRowCount(0);
        
        readFinanceList = DatabaseUtils.getFinanceListFromDB();
        
        for (FinanceCompany f : readFinanceList.getFinanceList()){
            
            Object[] row = new Object[7];
            row[0] = "Finance company";
            row[1] = f.getFinanceId();
            row[2] = f.getFinanceName();
            row[3] = f.getFinanceCity();
            row[4] = f.getFinanceState();
            
            model.addRow(row);
            
        }
        
    }

}
